import React, { useState, createRef, useEffect } from "react";
import { Link } from "react-router-dom";
import ColorThief from "colorthief";

function Movie({ movie }) {
    let poster = require(`../../posters/${movie.title}.jpg`);

    const [theme, setTheme] = useState("black");
    const [bg, setBg] = useState("white");
    const imgRef = createRef();

    // convert rgb value from ColorThief to Hex value
    const rgbToHex = (r, g, b) =>
        "#" +
        [r, g, b]
            .map((x) => {
                const hex = x.toString(16);
                return hex.length === 1 ? "0" + hex : hex;
            })
            .join("");

    // When the theme colour is generated by ColorThief, generate the background colour
    // Based on the luma(brightness) value of the theme colour, the background colour is
    // a brightened or darkened shade of the theme colour to provide enough contrast with
    // the text which are theme coloured

    useEffect(() => {
        const hexToLuma = (colour) => {
            const hex = colour.replace(/#/, "");
            const r = parseInt(hex.substr(0, 2), 16);
            const g = parseInt(hex.substr(2, 2), 16);
            const b = parseInt(hex.substr(4, 2), 16);

            const lum =
                [0.299 * r, 0.587 * g, 0.114 * b].reduce((a, b) => a + b) / 255;
            if (lum > 0.7) {
                setBg(adjustBrightness(colour, -60));
            } else {
                setBg(adjustBrightness(colour, 140));
            }
        };

        hexToLuma(theme);
    }, [theme]);

    // Brighten or darken a colour by a percentage amount by adjusting the rgb value
    function adjustBrightness(color, amount) {
        return (
            "#" +
            color
                .replace(/^#/, "")
                .replace(/../g, (color) =>
                    (
                        "0" +
                        Math.min(
                            255,
                            Math.max(0, parseInt(color, 16) + amount)
                        ).toString(16)
                    ).substr(-2)
                )
        );
    }

    return (
        <div className="movie" style={{ "--theme": theme, "--bg": bg }}>
            <img
                className="poster"
                ref={imgRef}
                alt="Poster"
                src={poster.default}
                onLoad={() => {
                    // use ColorTheif to obtain a dominant colour from the movie poster
                    const colorThief = new ColorThief();
                    const img = imgRef.current;
                    const result = colorThief.getColor(img, 35);
                    setTheme(rgbToHex(result[0], result[1], result[2]));
                }}
            />
            <div className="text">
                <h3 className="title">{movie.title}</h3>
                <p>({movie.release_date})</p>
                <Link className="rounded_btn" to={`/all-movies/${movie.id}`}>
                    More Info âžž
                </Link>
            </div>
        </div>
    );
}

export default Movie;
